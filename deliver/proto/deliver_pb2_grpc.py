# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import deliver_pb2 as deliver__pb2


class BarDataReceiverStub(object):
    """定义bar消息接收对象
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BarDataReceiver = channel.unary_unary(
                '/BarDataReceiver/BarDataReceiver',
                request_serializer=deliver__pb2.BarData.SerializeToString,
                response_deserializer=deliver__pb2.Response.FromString,
                )


class BarDataReceiverServicer(object):
    """定义bar消息接收对象
    """

    def BarDataReceiver(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BarDataReceiverServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BarDataReceiver': grpc.unary_unary_rpc_method_handler(
                    servicer.BarDataReceiver,
                    request_deserializer=deliver__pb2.BarData.FromString,
                    response_serializer=deliver__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'BarDataReceiver', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BarDataReceiver(object):
    """定义bar消息接收对象
    """

    @staticmethod
    def BarDataReceiver(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BarDataReceiver/BarDataReceiver',
            deliver__pb2.BarData.SerializeToString,
            deliver__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class TickDataReceiverStub(object):
    """定义tick消息接收对象
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TickDataReceiver = channel.unary_unary(
                '/TickDataReceiver/TickDataReceiver',
                request_serializer=deliver__pb2.TickData.SerializeToString,
                response_deserializer=deliver__pb2.Response.FromString,
                )


class TickDataReceiverServicer(object):
    """定义tick消息接收对象
    """

    def TickDataReceiver(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TickDataReceiverServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TickDataReceiver': grpc.unary_unary_rpc_method_handler(
                    servicer.TickDataReceiver,
                    request_deserializer=deliver__pb2.TickData.FromString,
                    response_serializer=deliver__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'TickDataReceiver', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TickDataReceiver(object):
    """定义tick消息接收对象
    """

    @staticmethod
    def TickDataReceiver(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TickDataReceiver/TickDataReceiver',
            deliver__pb2.TickData.SerializeToString,
            deliver__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class OrerReceiverStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OrerRReceiver = channel.unary_unary(
                '/OrerReceiver/OrerRReceiver',
                request_serializer=deliver__pb2.Order.SerializeToString,
                response_deserializer=deliver__pb2.Response.FromString,
                )


class OrerReceiverServicer(object):
    """Missing associated documentation comment in .proto file."""

    def OrerRReceiver(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrerReceiverServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OrerRReceiver': grpc.unary_unary_rpc_method_handler(
                    servicer.OrerRReceiver,
                    request_deserializer=deliver__pb2.Order.FromString,
                    response_serializer=deliver__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'OrerReceiver', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OrerReceiver(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def OrerRReceiver(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OrerReceiver/OrerRReceiver',
            deliver__pb2.Order.SerializeToString,
            deliver__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
